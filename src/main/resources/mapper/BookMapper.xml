<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.hotel.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="com.example.hotel.baen.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bookinfo" property="bookinfo" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="reserve" property="reserve" jdbcType="INTEGER" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="buyorsell" property="buyorsell" jdbcType="INTEGER" />
    <result column="bookphone" property="bookphone" jdbcType="VARCHAR" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="bookaddress" property="bookaddress" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.hotel.baen.Book" >
    insert into book (id, bookinfo, time, 
      price, reserve, typeid, 
      userid, buyorsell, bookphone, 
      bookname, bookaddress)
    values (#{id,jdbcType=INTEGER}, #{bookinfo,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{reserve,jdbcType=INTEGER}, #{typeid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{buyorsell,jdbcType=INTEGER}, #{bookphone,jdbcType=VARCHAR}, 
      #{bookname,jdbcType=VARCHAR}, #{bookaddress,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.hotel.baen.Book" >
    update book
    set bookinfo = #{bookinfo,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      reserve = #{reserve,jdbcType=INTEGER},
      typeid = #{typeid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      buyorsell = #{buyorsell,jdbcType=INTEGER},
      bookphone = #{bookphone,jdbcType=VARCHAR},
      bookname = #{bookname,jdbcType=VARCHAR},
      bookaddress = #{bookaddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, bookinfo, time, price, reserve, typeid, userid, buyorsell, bookphone, 
    bookname, bookaddress
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, bookinfo, time, price, reserve, typeid, userid, buyorsell, bookphone, 
    bookname, bookaddress
    from book
  </select>



  <select id="selectbytypeid" resultMap="BaseResultMap" >
   select *
    from book   where typeid = #{typeid}
  </select>

  <select id="selectbyuserid" resultMap="BaseResultMap" >
   select *
    from book   where userid = #{userid}
  </select>

  <select id="selectbytypeicemin" resultMap="BaseResultMap" >
  select   *     from   book
where
typeid = #{typeid}  order   by   price   asc
  </select>

  <select id="selebig" resultMap="BaseResultMap" >
   select   *     from   book
  order   by   id
  desc
  </select>

  <select id="selectbyname" resultMap="BaseResultMap" >
   select *
    from book   where typeid = #{typeid}  and bookname = #{bookname}
  </select>
  <select id="selectallbyname" resultMap="BaseResultMap" >
   select *
    from book   where bookname = #{bookname}
  </select>



</mapper>